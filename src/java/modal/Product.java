package modal;
// Generated Jan 13, 2024 10:48:19 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="ecom_final_db"
)
public class Product  implements java.io.Serializable {


     private String productId;
     private Admin admin;
     private Brand brand;
     private Category category;
     private MainCategory mainCategory;
     private SubCategory subCategory;
     private String name;
     private String unit;
     private int qty;
     private Date addtoby;
     private double unitPrice;
     private double purchasePrice;
     private int discount;
     private double discountPrice;
     private String thumbImg;
     private int sortId;
     private boolean publishUnpublishId;
     private String shortdes;
     private String description;
     private String shippingDays;
     private int shippingStatus;
     private int lowStockWarning;
     private boolean status;
     private Set<ProductImage> productImages = new HashSet<ProductImage>(0);
     private Set<TableFlatRate> tableFlatRates = new HashSet<TableFlatRate>(0);
     private Set<StockVisibility> stockVisibilities = new HashSet<StockVisibility>(0);
     private Set<TableShippingStatus> tableShippingStatuses = new HashSet<TableShippingStatus>(0);

    public Product() {
    }

	
    public Product(String productId, Admin admin, Brand brand, Category category, MainCategory mainCategory, SubCategory subCategory, String name, String unit, int qty, Date addtoby, double unitPrice, double purchasePrice, int discount, double discountPrice, int sortId, boolean publishUnpublishId, String shortdes, String description, String shippingDays, int shippingStatus, int lowStockWarning, boolean status) {
        this.productId = productId;
        this.admin = admin;
        this.brand = brand;
        this.category = category;
        this.mainCategory = mainCategory;
        this.subCategory = subCategory;
        this.name = name;
        this.unit = unit;
        this.qty = qty;
        this.addtoby = addtoby;
        this.unitPrice = unitPrice;
        this.purchasePrice = purchasePrice;
        this.discount = discount;
        this.discountPrice = discountPrice;
        this.sortId = sortId;
        this.publishUnpublishId = publishUnpublishId;
        this.shortdes = shortdes;
        this.description = description;
        this.shippingDays = shippingDays;
        this.shippingStatus = shippingStatus;
        this.lowStockWarning = lowStockWarning;
        this.status = status;
    }
    public Product(String productId, Admin admin, Brand brand, Category category, MainCategory mainCategory, SubCategory subCategory, String name, String unit, int qty, Date addtoby, double unitPrice, double purchasePrice, int discount, double discountPrice, String thumbImg, int sortId, boolean publishUnpublishId, String shortdes, String description, String shippingDays, int shippingStatus, int lowStockWarning, boolean status, Set<ProductImage> productImages, Set<TableFlatRate> tableFlatRates, Set<StockVisibility> stockVisibilities, Set<TableShippingStatus> tableShippingStatuses) {
       this.productId = productId;
       this.admin = admin;
       this.brand = brand;
       this.category = category;
       this.mainCategory = mainCategory;
       this.subCategory = subCategory;
       this.name = name;
       this.unit = unit;
       this.qty = qty;
       this.addtoby = addtoby;
       this.unitPrice = unitPrice;
       this.purchasePrice = purchasePrice;
       this.discount = discount;
       this.discountPrice = discountPrice;
       this.thumbImg = thumbImg;
       this.sortId = sortId;
       this.publishUnpublishId = publishUnpublishId;
       this.shortdes = shortdes;
       this.description = description;
       this.shippingDays = shippingDays;
       this.shippingStatus = shippingStatus;
       this.lowStockWarning = lowStockWarning;
       this.status = status;
       this.productImages = productImages;
       this.tableFlatRates = tableFlatRates;
       this.stockVisibilities = stockVisibilities;
       this.tableShippingStatuses = tableShippingStatuses;
    }
   
     @Id 

    
    @Column(name="product_id", unique=true, nullable=false, length=20)
    public String getProductId() {
        return this.productId;
    }
    
    public void setProductId(String productId) {
        this.productId = productId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="admin_id", nullable=false)
    public Admin getAdmin() {
        return this.admin;
    }
    
    public void setAdmin(Admin admin) {
        this.admin = admin;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="brand_id", nullable=false)
    public Brand getBrand() {
        return this.brand;
    }
    
    public void setBrand(Brand brand) {
        this.brand = brand;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="category_id", nullable=false)
    public Category getCategory() {
        return this.category;
    }
    
    public void setCategory(Category category) {
        this.category = category;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="maincat_id", nullable=false)
    public MainCategory getMainCategory() {
        return this.mainCategory;
    }
    
    public void setMainCategory(MainCategory mainCategory) {
        this.mainCategory = mainCategory;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="subcat_id", nullable=false)
    public SubCategory getSubCategory() {
        return this.subCategory;
    }
    
    public void setSubCategory(SubCategory subCategory) {
        this.subCategory = subCategory;
    }

    
    @Column(name="name", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="unit", nullable=false, length=45)
    public String getUnit() {
        return this.unit;
    }
    
    public void setUnit(String unit) {
        this.unit = unit;
    }

    
    @Column(name="qty", nullable=false)
    public int getQty() {
        return this.qty;
    }
    
    public void setQty(int qty) {
        this.qty = qty;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="addtoby", nullable=false, length=19)
    public Date getAddtoby() {
        return this.addtoby;
    }
    
    public void setAddtoby(Date addtoby) {
        this.addtoby = addtoby;
    }

    
    @Column(name="unit_price", nullable=false, precision=22, scale=0)
    public double getUnitPrice() {
        return this.unitPrice;
    }
    
    public void setUnitPrice(double unitPrice) {
        this.unitPrice = unitPrice;
    }

    
    @Column(name="purchase_price", nullable=false, precision=22, scale=0)
    public double getPurchasePrice() {
        return this.purchasePrice;
    }
    
    public void setPurchasePrice(double purchasePrice) {
        this.purchasePrice = purchasePrice;
    }

    
    @Column(name="discount", nullable=false)
    public int getDiscount() {
        return this.discount;
    }
    
    public void setDiscount(int discount) {
        this.discount = discount;
    }

    
    @Column(name="discount_price", nullable=false, precision=22, scale=0)
    public double getDiscountPrice() {
        return this.discountPrice;
    }
    
    public void setDiscountPrice(double discountPrice) {
        this.discountPrice = discountPrice;
    }

    
    @Column(name="thumb_img", length=500)
    public String getThumbImg() {
        return this.thumbImg;
    }
    
    public void setThumbImg(String thumbImg) {
        this.thumbImg = thumbImg;
    }

    
    @Column(name="sort_id", nullable=false)
    public int getSortId() {
        return this.sortId;
    }
    
    public void setSortId(int sortId) {
        this.sortId = sortId;
    }

    
    @Column(name="publish_unpublish_id", nullable=false)
    public boolean isPublishUnpublishId() {
        return this.publishUnpublishId;
    }
    
    public void setPublishUnpublishId(boolean publishUnpublishId) {
        this.publishUnpublishId = publishUnpublishId;
    }

    
    @Column(name="shortdes", nullable=false, length=100)
    public String getShortdes() {
        return this.shortdes;
    }
    
    public void setShortdes(String shortdes) {
        this.shortdes = shortdes;
    }

    
    @Column(name="description", nullable=false, length=500)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="shipping_days", nullable=false, length=45)
    public String getShippingDays() {
        return this.shippingDays;
    }
    
    public void setShippingDays(String shippingDays) {
        this.shippingDays = shippingDays;
    }

    
    @Column(name="shipping_status", nullable=false)
    public int getShippingStatus() {
        return this.shippingStatus;
    }
    
    public void setShippingStatus(int shippingStatus) {
        this.shippingStatus = shippingStatus;
    }

    
    @Column(name="low_stock_warning", nullable=false)
    public int getLowStockWarning() {
        return this.lowStockWarning;
    }
    
    public void setLowStockWarning(int lowStockWarning) {
        this.lowStockWarning = lowStockWarning;
    }

    
    @Column(name="status", nullable=false)
    public boolean isStatus() {
        return this.status;
    }
    
    public void setStatus(boolean status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<ProductImage> getProductImages() {
        return this.productImages;
    }
    
    public void setProductImages(Set<ProductImage> productImages) {
        this.productImages = productImages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<TableFlatRate> getTableFlatRates() {
        return this.tableFlatRates;
    }
    
    public void setTableFlatRates(Set<TableFlatRate> tableFlatRates) {
        this.tableFlatRates = tableFlatRates;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<StockVisibility> getStockVisibilities() {
        return this.stockVisibilities;
    }
    
    public void setStockVisibilities(Set<StockVisibility> stockVisibilities) {
        this.stockVisibilities = stockVisibilities;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="product")
    public Set<TableShippingStatus> getTableShippingStatuses() {
        return this.tableShippingStatuses;
    }
    
    public void setTableShippingStatuses(Set<TableShippingStatus> tableShippingStatuses) {
        this.tableShippingStatuses = tableShippingStatuses;
    }




}


